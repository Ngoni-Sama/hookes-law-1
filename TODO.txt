TODO list for hookes-law

-----------------------------------------------------------------------------------
Design questions
-----------------------------------------------------------------------------------

With the number of decimal places displayed, calculations don't work out.
Eg: k = 940, x = 0.001 -> F = 0.94, but display shows F = 1

3 decimal places are not sufficient for x. Eg, for F = 1, changing k shows no change in x.

MD isn't happy with the robotic arm design. Defer further implementation of it until
consensus is reached.

Do we want to show the 300 tick label (1/2 max) for spring constant range (200,600)?

Do we really need left alignment of icons in the "Systems" control panel?

In parallel system, should changing spring constant change applied force instead of displacement?

-----------------------------------------------------------------------------------
Introduction screen
-----------------------------------------------------------------------------------


-----------------------------------------------------------------------------------
Systems screen
-----------------------------------------------------------------------------------

SeriesSystem: when changing spring constants, sometimes total spring force != total applied force
ParallelSystem: force vector values are wrong
ParallelSystem: changing spring constants doesn't behave correctly, because changing spring constant adjusts displacement
Keep spring constants and applied force synchronized between serial and parallel systems.

-----------------------------------------------------------------------------------
Energy screen
-----------------------------------------------------------------------------------


-----------------------------------------------------------------------------------
General
-----------------------------------------------------------------------------------

Integrate new robotic arm graphics
Make hook rotate up when displacement is zero and not dragging (and not using Applied Force control?)
Split spring into foreground and background, use vertical gradients
Compute spring shape as a function of displacement (MV's algorithm?)
compensate for headLineWidth in LineArrowNode, so that tip is at (tipX,tipY)
constrain text size for i18n

-----------------------------------------------------------------------------------
Common
-----------------------------------------------------------------------------------

migrate LineArrowNode to scenery-phet